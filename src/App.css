.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* class App extends React.Component {
  state = {
    contacts: contacts.slice(0, 5),
  };

  addRandomContact = () => {
    const randomContact = contacts[Math.floor(Math.random() * contacts.length)];
    this.setState((state) => {
      return { contacts: [...state.contacts, randomContact] };
    });
  };

  sortByName = () => {
    this.setState((state) => {
      const newContacts = [...state.contacts].sort((a, b) => {
        if (a.name < b.name) return -1;
        if (a.name > b.name) return 1;
        return 0;
      });

      return { contacts: newContacts };
    });
  };

  sortByPopularity = () => {
    this.setState((state) => {
      const newContacts = [...state.contacts].sort((a, b) => {
        return b.popularity - a.popularity;
      });
      return { contacts: newContacts };
    });
  };

  deleteContact = (id) => {
    const filteredArr = this.state.contacts.filter((item) => item.id !== id);
    this.setState({ contacts: filteredArr });
  };

  render() {
    return (
      <div className="App">
        <h1>IronContacts</h1>
        <button onClick={this.addRandomContact}>Add random contact</button>
        <button onClick={this.sortByName}>Sort by name</button>
        <button onClick={this.sortByPopularity}>Sort by popularity</button>

        <table>
          <thead>
            <tr>
              <th>Picture</th>
              <th>Name</th>
              <th>Popularity</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {this.state.contacts.map((celeb) => {
              return (
                <tr key={celeb.id}>
                  <td>
                    <img src={celeb.pictureUrl} />
                  </td>
                  <td>{celeb.name}</td>
                  <td>{celeb.popularity}</td>
                  <td>
                    <button
                      onClick={() => {
                        this.deleteContact(celeb.id);
                      }}
                    >
                      Delete
                    </button>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    );
  }
}

export default App; */
